/* Generated by Quick UML for Java */

package com.jfbuilds.playngame.general;

import static playn.core.PlayN.assets;
import static playn.core.PlayN.graphics;

import java.util.ArrayList;

import com.jfbuilds.playngame.scenes.SimpleScene;

import playn.core.GroupLayer;
import playn.core.Image;
import playn.core.ImageLayer;

/**
 *
 **/
public class Zankie extends SimpleGame {

	public Zankie() {
		super(33);
		System.out.println("Game created..");
		
	}
	
	@Override
	public void init() {
		
		System.out.println("Game init");
		
		// init scenes and indexes
		initScenes();
		
		// set the current scene to the first scene's group layer
		
		
		
		
		// create and add background image layer
		Image bgImage = assets().getImage("images/bg.png");
		ImageLayer bgLayer = graphics().createImageLayer(bgImage);
		graphics().rootLayer().add(bgLayer);

		System.out.print("Zankie is On!!! ");
		
		
		
//		JFBContainerCollection col = new JFBContainerCollection("Jean");
//		ArrayList<JFBContainerCollection> myFamily = col.getFamily();
//		for (Iterator iterator = myFamily.iterator(); iterator.hasNext();) {
//			JFBContainerCollection jfbContainerCollection = (JFBContainerCollection) iterator.next();
//			System.out.println(jfbContainerCollection.getName());
//		}
		
//		for (int i = 0; i < JFBContainerCollectionInterface.FragmentType.values().length; i++) {
//			System.out.println("Type:" + JFBContainerCollectionInterface.FragmentType.values()[i].name() + " - Allow Multiple: " + JFBContainerCollectionInterface.FragmentType.values()[i].multipleAllowed());
//		}

		//GenerateCode.sampleInit();
		
		
	}

private void createScenes() {
		
		//create array of scenes
		ArrayList<SimpleScene> scenes = new ArrayList<SimpleScene>();
		scenes.add(new SimpleScene("Opening Act"));
		scenes.add(new SimpleScene("Act 1"));
		scenes.add(new SimpleScene("Act 2"));
		scenes.add(new SimpleScene("Act 3"));
		scenes.add(new SimpleScene("Act 4"));
		scenes.add(new SimpleScene("Act 5"));
		scenes.add(new SimpleScene("Closing Act"));
		this.setGameScenes(scenes);
	}

	private void initScenes() {
	
		// set the scene index to 0
		setCurrentSceneIndex(0);
		
		// create the scene for the game
		createScenes();
		
		// get the current scene 
		System.out.println("Current Scene is " + getCurrentScene().getName());
	}

	@Override
	public void paint(float alpha) {
		// the background automatically paints itself, so no need to do anything
		// here!
	}

}